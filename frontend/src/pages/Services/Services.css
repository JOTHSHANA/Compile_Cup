/* Register custom properties for smooth animation */
@property --p {
  syntax: '<number>';
  initial-value: 0;
  inherits: true;
}

@property --v {
  syntax: '<number>';
  initial-value: 0;
  inherits: true;
}

.services-page-container {
  width: 100%;
  min-height: 100vh;
  padding: 4rem 2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
  background-color: var(--background-primary);
}

.services-main-title {
  font-size: 2.5rem;
  margin-bottom: 1rem;
  color: var(--text-primary);
}

/* Debugger style */
.debug-index-display {
  background: #ffc107;
  color: black;
  padding: 5px 10px;
  border-radius: 5px;
  margin-bottom: 2rem;
  font-family: monospace;
}

/* --- Carousel Styling --- */
.services-carousel {
  --t: 0.8s;
  --p: var(--k);
  --abs-p: max(var(--k) - var(--p), var(--p) - var(--k));
  --end: clamp(0, var(--abs-p) - 1, 1);
  --dir: calc((1 - 2 * var(--end)) * sign(var(--k) - var(--p)));
  --fwd: calc(0.5 * (1 + var(--dir)));
  --v: var(--k);
  --abs-v: max(var(--v) - var(--p), var(--p) - var(--v));
  --prg: calc(var(--abs-v) / (1 - var(--end) + var(--end) * (var(--n) - 1)));

  display: grid;
  grid-template: 1fr max-content 1fr / minmax(200px, 1fr) minmax(350px, 2fr);
  color: var(--text-primary);
  transition: --p 0s var(--t), --v var(--t);
  width: 100%;
  max-width: 850px;
  height: 350px;
}

.service-article {
  --abs-top: max(var(--k) - var(--i), var(--i) - var(--k));
  --not-top: min(1, var(--abs-top));
  --top: calc(1 - var(--not-top));
  /* This is 1 for the active card, 0 for others */
  --val-mov: ((1 - var(--fwd)) * var(--p) + var(--fwd) * var(--k) - var(--i));
  --abs-mov: max(var(--val-mov), -1 * var(--val-mov));
  --not-mov: min(1, var(--abs-mov));
  --mov: calc(1 - var(--not-mov));

  grid-area: 1 / 1 / -1 / -1;
  grid-template: subgrid / subgrid;

  /* **FIX**: Simplified and more reliable z-index calculation */
  z-index: calc(var(--n) - var(--abs-top));

  transition: z-index var(--t) cubic-bezier(1, -0.9, 0, 1.9);
  display: flex;
  gap: 70px;
}

.service-icon-card {
  --sin: sin(var(--prg) * 0.5turn);
  grid-area: 1 / 1 / -1;
  display: grid;
  place-items: center;
  border: 2px solid var(--accent-primary);
  height: 15em;
  aspect-ratio: 1;
  border-radius: 1rem;
  transform: translate(calc(-150% * var(--mov) * sqrt(var(--sin))))
    rotate(calc((1 - var(--sin)) * var(--a)));

  /* **FIX**: Use color-mix for a smooth, reliable background change */
  background-color: color-mix(in srgb, var(--accent-primary) calc(var(--top) * 100%), var(--background-secondary));

  transition: transform 0.8s, background-color 0.8s;
  position: relative;
}

.card-debug-letter {
  font-size: 3rem;
  font-weight: bold;
  z-index: 10;

  /* **FIX**: Use color-mix for letter color change */
  color: color-mix(in srgb, var(--background-secondary) calc(var(--top) * 100%), var(--accent-primary));
  transition: color 0.8s;
}

.icon-container {
  position: absolute;
  opacity: 0.2;
  /* Kept the main icon slightly visible */
}

.icon-container .MuiSvgIcon-root {
  font-size: 6rem;
  color: color-mix(in srgb, var(--background-secondary) calc(var(--top) * 100%), var(--accent-primary));
  transition: color 0.8s;
}

.service-content {
  grid-area: 1 / 2 / -1 / 2;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  text-align: left;
  transform: translateY(calc(var(--not-top) * 50px));
  opacity: var(--top);
  /* This should now work correctly */
  transition: 0.4s calc(var(--top) * 0.4s);
  transition-property: transform, opacity;
  padding-left: 1rem;
  /* Make sure content doesn't receive pointer events when invisible */
  pointer-events: calc(var(--top) * 1);
}

.service-content h2,
.service-content p,
.tech-stack {
  color: var(--text-primary);
}

.service-content p {
  color: var(--text-secondary);
}

.service-nav {
  display: flex;
  gap: 2em;
  z-index: 1000;
  justify-content: center;
  align-items: center;  
  width: 100%;
}

/* --- Formatted styles below --- */
.service-content h2 {
  font-size: 2rem;
  margin-bottom: 1rem;
}

.service-content p {
  font-size: 1rem;
  margin-bottom: 1.5rem;
  max-width: 450px;
}

.tech-stack {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.tech-badge {
  background-color: var(--background-secondary);
  border: 1px solid var(--accent-primary);
  color: var(--text-primary);
  padding: 0.4rem 0.9rem;
  border-radius: 16px;
  font-size: 0.85rem;
}

.service-nav button {
  --sgn: -1;
  --prc: calc(var(--hov, 0) * 100%);
  --c: color-mix(in hsl, var(--accent-primary) var(--prc), #52527a);
  display: grid;
  border: none;
  width: 3rem;
  aspect-ratio: 1;
  border-radius: 50%;
  background: rgba(82, 82, 122, 0.2);
  color: var(--accent-primary);
  font: 900 2em/1.5 sans-serif;
  cursor: pointer;
  transition: 0.3s ease-out;
  transition-property: background-color, color;
}

.service-nav button:hover,
.service-nav button:focus {
  --hov: 1;
  background-color: rgba(129, 140, 248, 0.3);
}

.service-nav button::before {
  content: '';
  place-self: center;
  border: solid 2px;
  border-width: 2px 2px 0 0;
  width: 35%;
  aspect-ratio: 1;
  transform: translateX(calc(var(--sgn) * -15%)) rotate(45deg) scale(var(--sgn));
}

.service-nav button[aria-label='next'] {
  --sgn: 1;
}

.services-note {
  margin-top: 1rem;
  color: var(--text-secondary);
}

.contact-button {
  display: inline-block;
  margin-top: 1.5rem;
  padding: 0.8rem 2.5rem;
  background-color: var(--accent-primary);
  color: var(--background-primary);
  border-radius: 5px;
  text-decoration: none;
  font-weight: bold;
  transition: opacity 0.3s ease;
}

.contact-button:hover {
  opacity: 0.9;
}

:root {
  --background-primary: #1a202c;
  --background-secondary: #2d3748;
  --text-primary: #e2e8f0;
  --text-secondary: #a0aec0;
  --accent-primary: #63b3ed;
}